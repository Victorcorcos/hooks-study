{"ast":null,"code":"\"use strict\";\n\nvar mockExpectation = require(\"./mock-expectation\");\n\nvar spyCallToString = require(\"./call\").toString;\n\nvar extend = require(\"./util/core/extend\");\n\nvar match = require(\"./match\");\n\nvar deepEqual = require(\"./util/core/deep-equal\").use(match);\n\nvar wrapMethod = require(\"./util/core/wrap-method\");\n\nvar push = Array.prototype.push;\n\nfunction mock(object) {\n  if (!object || typeof object === \"string\") {\n    return mockExpectation.create(object ? object : \"Anonymous mock\");\n  }\n\n  return mock.create(object);\n}\n\nfunction each(collection, callback) {\n  var col = collection || [];\n  col.forEach(callback);\n}\n\nfunction arrayEquals(arr1, arr2, compareLength) {\n  if (compareLength && arr1.length !== arr2.length) {\n    return false;\n  }\n\n  return arr1.every(function (element, i) {\n    return deepEqual(element, arr2[i]);\n  });\n}\n\nextend(mock, {\n  create: function create(object) {\n    if (!object) {\n      throw new TypeError(\"object is null\");\n    }\n\n    var mockObject = extend({}, mock);\n    mockObject.object = object;\n    delete mockObject.create;\n    return mockObject;\n  },\n  expects: function expects(method) {\n    if (!method) {\n      throw new TypeError(\"method is falsy\");\n    }\n\n    if (!this.expectations) {\n      this.expectations = {};\n      this.proxies = [];\n      this.failures = [];\n    }\n\n    if (!this.expectations[method]) {\n      this.expectations[method] = [];\n      var mockObject = this;\n      wrapMethod(this.object, method, function () {\n        return mockObject.invokeMethod(method, this, arguments);\n      });\n      push.call(this.proxies, method);\n    }\n\n    var expectation = mockExpectation.create(method);\n    push.call(this.expectations[method], expectation);\n    return expectation;\n  },\n  restore: function restore() {\n    var object = this.object;\n    each(this.proxies, function (proxy) {\n      if (typeof object[proxy].restore === \"function\") {\n        object[proxy].restore();\n      }\n    });\n  },\n  verify: function verify() {\n    var expectations = this.expectations || {};\n    var messages = this.failures ? this.failures.slice() : [];\n    var met = [];\n    each(this.proxies, function (proxy) {\n      each(expectations[proxy], function (expectation) {\n        if (!expectation.met()) {\n          push.call(messages, expectation.toString());\n        } else {\n          push.call(met, expectation.toString());\n        }\n      });\n    });\n    this.restore();\n\n    if (messages.length > 0) {\n      mockExpectation.fail(messages.concat(met).join(\"\\n\"));\n    } else if (met.length > 0) {\n      mockExpectation.pass(messages.concat(met).join(\"\\n\"));\n    }\n\n    return true;\n  },\n  invokeMethod: function invokeMethod(method, thisValue, args) {\n    /* if we cannot find any matching files we will explicitly call mockExpection#fail with error messages */\n\n    /* eslint consistent-return: \"off\" */\n    var expectations = this.expectations && this.expectations[method] ? this.expectations[method] : [];\n    var currentArgs = args || [];\n    var available;\n    var expectationsWithMatchingArgs = expectations.filter(function (expectation) {\n      var expectedArgs = expectation.expectedArguments || [];\n      return arrayEquals(expectedArgs, currentArgs, expectation.expectsExactArgCount);\n    });\n    var expectationsToApply = expectationsWithMatchingArgs.filter(function (expectation) {\n      return !expectation.met() && expectation.allowsCall(thisValue, args);\n    });\n\n    if (expectationsToApply.length > 0) {\n      return expectationsToApply[0].apply(thisValue, args);\n    }\n\n    var messages = [];\n    var exhausted = 0;\n    expectationsWithMatchingArgs.forEach(function (expectation) {\n      if (expectation.allowsCall(thisValue, args)) {\n        available = available || expectation;\n      } else {\n        exhausted += 1;\n      }\n    });\n\n    if (available && exhausted === 0) {\n      return available.apply(thisValue, args);\n    }\n\n    expectations.forEach(function (expectation) {\n      push.call(messages, \"    \" + expectation.toString());\n    });\n    messages.unshift(\"Unexpected call: \" + spyCallToString.call({\n      proxy: method,\n      args: args\n    }));\n    var err = new Error();\n\n    if (!err.stack) {\n      // PhantomJS does not serialize the stack trace until the error has been thrown\n      try {\n        throw err;\n      } catch (e) {\n        /* empty */\n      }\n    }\n\n    this.failures.push(\"Unexpected call: \" + spyCallToString.call({\n      proxy: method,\n      args: args,\n      stack: err.stack\n    }));\n    mockExpectation.fail(messages.join(\"\\n\"));\n  }\n});\nmodule.exports = mock;","map":{"version":3,"names":["mockExpectation","require","spyCallToString","toString","extend","match","deepEqual","use","wrapMethod","push","Array","prototype","mock","object","create","each","collection","callback","col","forEach","arrayEquals","arr1","arr2","compareLength","length","every","element","i","TypeError","mockObject","expects","method","expectations","proxies","failures","invokeMethod","arguments","call","expectation","restore","proxy","verify","messages","slice","met","fail","concat","join","pass","thisValue","args","currentArgs","available","expectationsWithMatchingArgs","filter","expectedArgs","expectedArguments","expectsExactArgCount","expectationsToApply","allowsCall","apply","exhausted","unshift","err","Error","stack","e","module","exports"],"sources":["/Users/victorcosta/Desktop/repositories/react-project/hooks-study/node_modules/sinon/lib/sinon/mock.js"],"sourcesContent":["\"use strict\";\n\nvar mockExpectation = require(\"./mock-expectation\");\nvar spyCallToString = require(\"./call\").toString;\nvar extend = require(\"./util/core/extend\");\nvar match = require(\"./match\");\nvar deepEqual = require(\"./util/core/deep-equal\").use(match);\nvar wrapMethod = require(\"./util/core/wrap-method\");\n\nvar push = Array.prototype.push;\n\nfunction mock(object) {\n    if (!object || typeof object === \"string\") {\n        return mockExpectation.create(object ? object : \"Anonymous mock\");\n    }\n\n    return mock.create(object);\n}\n\nfunction each(collection, callback) {\n    var col = collection || [];\n\n    col.forEach(callback);\n}\n\nfunction arrayEquals(arr1, arr2, compareLength) {\n    if (compareLength && (arr1.length !== arr2.length)) {\n        return false;\n    }\n\n    return arr1.every(function (element, i) {\n        return deepEqual(element, arr2[i]);\n\n    });\n}\n\nextend(mock, {\n    create: function create(object) {\n        if (!object) {\n            throw new TypeError(\"object is null\");\n        }\n\n        var mockObject = extend({}, mock);\n        mockObject.object = object;\n        delete mockObject.create;\n\n        return mockObject;\n    },\n\n    expects: function expects(method) {\n        if (!method) {\n            throw new TypeError(\"method is falsy\");\n        }\n\n        if (!this.expectations) {\n            this.expectations = {};\n            this.proxies = [];\n            this.failures = [];\n        }\n\n        if (!this.expectations[method]) {\n            this.expectations[method] = [];\n            var mockObject = this;\n\n            wrapMethod(this.object, method, function () {\n                return mockObject.invokeMethod(method, this, arguments);\n            });\n\n            push.call(this.proxies, method);\n        }\n\n        var expectation = mockExpectation.create(method);\n        push.call(this.expectations[method], expectation);\n\n        return expectation;\n    },\n\n    restore: function restore() {\n        var object = this.object;\n\n        each(this.proxies, function (proxy) {\n            if (typeof object[proxy].restore === \"function\") {\n                object[proxy].restore();\n            }\n        });\n    },\n\n    verify: function verify() {\n        var expectations = this.expectations || {};\n        var messages = this.failures ? this.failures.slice() : [];\n        var met = [];\n\n        each(this.proxies, function (proxy) {\n            each(expectations[proxy], function (expectation) {\n                if (!expectation.met()) {\n                    push.call(messages, expectation.toString());\n                } else {\n                    push.call(met, expectation.toString());\n                }\n            });\n        });\n\n        this.restore();\n\n        if (messages.length > 0) {\n            mockExpectation.fail(messages.concat(met).join(\"\\n\"));\n        } else if (met.length > 0) {\n            mockExpectation.pass(messages.concat(met).join(\"\\n\"));\n        }\n\n        return true;\n    },\n\n    invokeMethod: function invokeMethod(method, thisValue, args) {\n        /* if we cannot find any matching files we will explicitly call mockExpection#fail with error messages */\n        /* eslint consistent-return: \"off\" */\n        var expectations = this.expectations && this.expectations[method] ? this.expectations[method] : [];\n        var currentArgs = args || [];\n        var available;\n\n        var expectationsWithMatchingArgs = expectations.filter(function (expectation) {\n            var expectedArgs = expectation.expectedArguments || [];\n\n            return arrayEquals(expectedArgs, currentArgs, expectation.expectsExactArgCount);\n        });\n\n        var expectationsToApply = expectationsWithMatchingArgs.filter(function (expectation) {\n            return !expectation.met() && expectation.allowsCall(thisValue, args);\n        });\n\n        if (expectationsToApply.length > 0) {\n            return expectationsToApply[0].apply(thisValue, args);\n        }\n\n        var messages = [];\n        var exhausted = 0;\n\n        expectationsWithMatchingArgs.forEach(function (expectation) {\n            if (expectation.allowsCall(thisValue, args)) {\n                available = available || expectation;\n            } else {\n                exhausted += 1;\n            }\n        });\n\n        if (available && exhausted === 0) {\n            return available.apply(thisValue, args);\n        }\n\n        expectations.forEach(function (expectation) {\n            push.call(messages, \"    \" + expectation.toString());\n        });\n\n        messages.unshift(\"Unexpected call: \" + spyCallToString.call({\n            proxy: method,\n            args: args\n        }));\n\n        var err = new Error();\n        if (!err.stack) {\n            // PhantomJS does not serialize the stack trace until the error has been thrown\n            try {\n                throw err;\n            } catch (e) {/* empty */}\n        }\n        this.failures.push(\"Unexpected call: \" + spyCallToString.call({\n            proxy: method,\n            args: args,\n            stack: err.stack\n        }));\n\n        mockExpectation.fail(messages.join(\"\\n\"));\n    }\n});\n\nmodule.exports = mock;\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}