{"ast":null,"code":"\"use strict\";\n\nvar TextEncoder = require(\"text-encoding\").TextEncoder;\n\nvar configureLogError = require(\"./core/log_error\");\n\nvar sinonEvent = require(\"./event\");\n\nvar extend = require(\"./core/extend\");\n\nfunction getWorkingXHR(globalScope) {\n  var supportsXHR = typeof globalScope.XMLHttpRequest !== \"undefined\";\n\n  if (supportsXHR) {\n    return globalScope.XMLHttpRequest;\n  }\n\n  var supportsActiveX = typeof globalScope.ActiveXObject !== \"undefined\";\n\n  if (supportsActiveX) {\n    return function () {\n      return new globalScope.ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n    };\n  }\n\n  return false;\n}\n\nvar supportsProgress = typeof ProgressEvent !== \"undefined\";\nvar supportsCustomEvent = typeof CustomEvent !== \"undefined\";\nvar supportsFormData = typeof FormData !== \"undefined\";\nvar supportsArrayBuffer = typeof ArrayBuffer !== \"undefined\";\n\nvar supportsBlob = require(\"../blob\").isSupported;\n\nvar isReactNative = global.navigator && global.navigator.product === \"ReactNative\";\nvar sinonXhr = {\n  XMLHttpRequest: global.XMLHttpRequest\n};\nsinonXhr.GlobalXMLHttpRequest = global.XMLHttpRequest;\nsinonXhr.GlobalActiveXObject = global.ActiveXObject;\nsinonXhr.supportsActiveX = typeof sinonXhr.GlobalActiveXObject !== \"undefined\";\nsinonXhr.supportsXHR = typeof sinonXhr.GlobalXMLHttpRequest !== \"undefined\";\nsinonXhr.workingXHR = getWorkingXHR(global);\nsinonXhr.supportsCORS = isReactNative || sinonXhr.supportsXHR && \"withCredentials\" in new sinonXhr.GlobalXMLHttpRequest();\nvar unsafeHeaders = {\n  \"Accept-Charset\": true,\n  \"Accept-Encoding\": true,\n  \"Connection\": true,\n  \"Content-Length\": true,\n  \"Cookie\": true,\n  \"Cookie2\": true,\n  \"Content-Transfer-Encoding\": true,\n  \"Date\": true,\n  \"Expect\": true,\n  \"Host\": true,\n  \"Keep-Alive\": true,\n  \"Referer\": true,\n  \"TE\": true,\n  \"Trailer\": true,\n  \"Transfer-Encoding\": true,\n  \"Upgrade\": true,\n  \"User-Agent\": true,\n  \"Via\": true\n};\n\nfunction EventTargetHandler() {\n  var self = this;\n  var events = [\"loadstart\", \"progress\", \"abort\", \"error\", \"load\", \"timeout\", \"loadend\"];\n\n  function addEventListener(eventName) {\n    self.addEventListener(eventName, function (event) {\n      var listener = self[\"on\" + eventName];\n\n      if (listener && typeof listener === \"function\") {\n        listener.call(this, event);\n      }\n    });\n  }\n\n  events.forEach(addEventListener);\n}\n\nEventTargetHandler.prototype = sinonEvent.EventTarget; // Note that for FakeXMLHttpRequest to work pre ES5\n// we lose some of the alignment with the spec.\n// To ensure as close a match as possible,\n// set responseType before calling open, send or respond;\n\nfunction FakeXMLHttpRequest(config) {\n  EventTargetHandler.call(this);\n  this.readyState = FakeXMLHttpRequest.UNSENT;\n  this.requestHeaders = {};\n  this.requestBody = null;\n  this.status = 0;\n  this.statusText = \"\";\n  this.upload = new EventTargetHandler();\n  this.responseType = \"\";\n  this.response = \"\";\n  this.logError = configureLogError(config);\n\n  if (sinonXhr.supportsCORS) {\n    this.withCredentials = false;\n  }\n\n  if (typeof FakeXMLHttpRequest.onCreate === \"function\") {\n    FakeXMLHttpRequest.onCreate(this);\n  }\n}\n\nfunction verifyState(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n\n  if (xhr.sendFlag) {\n    throw new Error(\"INVALID_STATE_ERR\");\n  }\n}\n\nfunction getHeader(headers, header) {\n  var foundHeader = Object.keys(headers).filter(function (h) {\n    return h.toLowerCase() === header.toLowerCase();\n  });\n  return foundHeader[0] || null;\n}\n\nfunction excludeSetCookie2Header(header) {\n  return !/^Set-Cookie2?$/i.test(header);\n} // largest arity in XHR is 5 - XHR#open\n\n\nvar apply = function (obj, method, args) {\n  switch (args.length) {\n    case 0:\n      return obj[method]();\n\n    case 1:\n      return obj[method](args[0]);\n\n    case 2:\n      return obj[method](args[0], args[1]);\n\n    case 3:\n      return obj[method](args[0], args[1], args[2]);\n\n    case 4:\n      return obj[method](args[0], args[1], args[2], args[3]);\n\n    case 5:\n      return obj[method](args[0], args[1], args[2], args[3], args[4]);\n\n    default:\n      throw new Error(\"Unhandled case\");\n  }\n};\n\nFakeXMLHttpRequest.filters = [];\n\nFakeXMLHttpRequest.addFilter = function addFilter(fn) {\n  this.filters.push(fn);\n};\n\nFakeXMLHttpRequest.defake = function defake(fakeXhr, xhrArgs) {\n  var xhr = new sinonXhr.workingXHR(); // eslint-disable-line new-cap\n\n  [\"open\", \"setRequestHeader\", \"send\", \"abort\", \"getResponseHeader\", \"getAllResponseHeaders\", \"addEventListener\", \"overrideMimeType\", \"removeEventListener\"].forEach(function (method) {\n    fakeXhr[method] = function () {\n      return apply(xhr, method, arguments);\n    };\n  });\n\n  var copyAttrs = function (args) {\n    args.forEach(function (attr) {\n      fakeXhr[attr] = xhr[attr];\n    });\n  };\n\n  var stateChange = function stateChange() {\n    fakeXhr.readyState = xhr.readyState;\n\n    if (xhr.readyState >= FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      copyAttrs([\"status\", \"statusText\"]);\n    }\n\n    if (xhr.readyState >= FakeXMLHttpRequest.LOADING) {\n      copyAttrs([\"responseText\", \"response\"]);\n    }\n\n    if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n      copyAttrs([\"responseXML\"]);\n    }\n\n    if (fakeXhr.onreadystatechange) {\n      fakeXhr.onreadystatechange.call(fakeXhr, {\n        target: fakeXhr\n      });\n    }\n  };\n\n  if (xhr.addEventListener) {\n    Object.keys(fakeXhr.eventListeners).forEach(function (event) {\n      /*eslint-disable no-loop-func*/\n      fakeXhr.eventListeners[event].forEach(function (handler) {\n        xhr.addEventListener(event, handler);\n      });\n      /*eslint-enable no-loop-func*/\n    });\n    xhr.addEventListener(\"readystatechange\", stateChange);\n  } else {\n    xhr.onreadystatechange = stateChange;\n  }\n\n  apply(xhr, \"open\", xhrArgs);\n};\n\nFakeXMLHttpRequest.useFilters = false;\n\nfunction verifyRequestOpened(xhr) {\n  if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n    throw new Error(\"INVALID_STATE_ERR - \" + xhr.readyState);\n  }\n}\n\nfunction verifyRequestSent(xhr) {\n  if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n    throw new Error(\"Request done\");\n  }\n}\n\nfunction verifyHeadersReceived(xhr) {\n  if (xhr.async && xhr.readyState !== FakeXMLHttpRequest.HEADERS_RECEIVED) {\n    throw new Error(\"No headers received\");\n  }\n}\n\nfunction verifyResponseBodyType(body) {\n  if (typeof body !== \"string\") {\n    var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" + body + \", which is not a string.\");\n    error.name = \"InvalidBodyException\";\n    throw error;\n  }\n}\n\nfunction convertToArrayBuffer(body, encoding) {\n  return new TextEncoder(encoding || \"utf-8\").encode(body).buffer;\n}\n\nfunction isXmlContentType(contentType) {\n  return !contentType || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(contentType);\n}\n\nfunction convertResponseBody(responseType, contentType, body) {\n  if (responseType === \"\" || responseType === \"text\") {\n    return body;\n  } else if (supportsArrayBuffer && responseType === \"arraybuffer\") {\n    return convertToArrayBuffer(body);\n  } else if (responseType === \"json\") {\n    try {\n      return JSON.parse(body);\n    } catch (e) {\n      // Return parsing failure as null\n      return null;\n    }\n  } else if (supportsBlob && responseType === \"blob\") {\n    var blobOptions = {};\n\n    if (contentType) {\n      blobOptions.type = contentType;\n    }\n\n    return new Blob([convertToArrayBuffer(body)], blobOptions);\n  } else if (responseType === \"document\") {\n    if (isXmlContentType(contentType)) {\n      return FakeXMLHttpRequest.parseXML(body);\n    }\n\n    return null;\n  }\n\n  throw new Error(\"Invalid responseType \" + responseType);\n}\n\nfunction clearResponse(xhr) {\n  if (xhr.responseType === \"\" || xhr.responseType === \"text\") {\n    xhr.response = xhr.responseText = \"\";\n  } else {\n    xhr.response = xhr.responseText = null;\n  }\n\n  xhr.responseXML = null;\n}\n\nFakeXMLHttpRequest.parseXML = function parseXML(text) {\n  // Treat empty string as parsing failure\n  if (text !== \"\") {\n    try {\n      if (typeof DOMParser !== \"undefined\") {\n        var parser = new DOMParser();\n        return parser.parseFromString(text, \"text/xml\");\n      }\n\n      var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n      xmlDoc.async = \"false\";\n      xmlDoc.loadXML(text);\n      return xmlDoc;\n    } catch (e) {// Unable to parse XML - no biggie\n    }\n  }\n\n  return null;\n};\n\nFakeXMLHttpRequest.statusCodes = {\n  100: \"Continue\",\n  101: \"Switching Protocols\",\n  200: \"OK\",\n  201: \"Created\",\n  202: \"Accepted\",\n  203: \"Non-Authoritative Information\",\n  204: \"No Content\",\n  205: \"Reset Content\",\n  206: \"Partial Content\",\n  207: \"Multi-Status\",\n  300: \"Multiple Choice\",\n  301: \"Moved Permanently\",\n  302: \"Found\",\n  303: \"See Other\",\n  304: \"Not Modified\",\n  305: \"Use Proxy\",\n  307: \"Temporary Redirect\",\n  400: \"Bad Request\",\n  401: \"Unauthorized\",\n  402: \"Payment Required\",\n  403: \"Forbidden\",\n  404: \"Not Found\",\n  405: \"Method Not Allowed\",\n  406: \"Not Acceptable\",\n  407: \"Proxy Authentication Required\",\n  408: \"Request Timeout\",\n  409: \"Conflict\",\n  410: \"Gone\",\n  411: \"Length Required\",\n  412: \"Precondition Failed\",\n  413: \"Request Entity Too Large\",\n  414: \"Request-URI Too Long\",\n  415: \"Unsupported Media Type\",\n  416: \"Requested Range Not Satisfiable\",\n  417: \"Expectation Failed\",\n  422: \"Unprocessable Entity\",\n  500: \"Internal Server Error\",\n  501: \"Not Implemented\",\n  502: \"Bad Gateway\",\n  503: \"Service Unavailable\",\n  504: \"Gateway Timeout\",\n  505: \"HTTP Version Not Supported\"\n};\nextend(FakeXMLHttpRequest.prototype, sinonEvent.EventTarget, {\n  async: true,\n  open: function open(method, url, async, username, password) {\n    this.method = method;\n    this.url = url;\n    this.async = typeof async === \"boolean\" ? async : true;\n    this.username = username;\n    this.password = password;\n    clearResponse(this);\n    this.requestHeaders = {};\n    this.sendFlag = false;\n\n    if (FakeXMLHttpRequest.useFilters === true) {\n      var xhrArgs = arguments;\n      var defake = FakeXMLHttpRequest.filters.some(function (filter) {\n        return filter.apply(this, xhrArgs);\n      });\n\n      if (defake) {\n        FakeXMLHttpRequest.defake(this, arguments);\n        return;\n      }\n    }\n\n    this.readyStateChange(FakeXMLHttpRequest.OPENED);\n  },\n  readyStateChange: function readyStateChange(state) {\n    this.readyState = state;\n    var readyStateChangeEvent = new sinonEvent.Event(\"readystatechange\", false, false, this);\n    var event, progress;\n\n    if (typeof this.onreadystatechange === \"function\") {\n      try {\n        this.onreadystatechange(readyStateChangeEvent);\n      } catch (e) {\n        this.logError(\"Fake XHR onreadystatechange handler\", e);\n      }\n    }\n\n    if (this.readyState === FakeXMLHttpRequest.DONE) {\n      if (this.aborted || this.status === 0) {\n        progress = {\n          loaded: 0,\n          total: 0\n        };\n        event = this.aborted ? \"abort\" : \"error\";\n      } else {\n        progress = {\n          loaded: 100,\n          total: 100\n        };\n        event = \"load\";\n      }\n\n      if (supportsProgress) {\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n        this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n      }\n\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n      this.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n    }\n\n    this.dispatchEvent(readyStateChangeEvent);\n  },\n  setRequestHeader: function setRequestHeader(header, value) {\n    verifyState(this);\n    var checkUnsafeHeaders = true;\n\n    if (typeof this.unsafeHeadersEnabled === \"function\") {\n      checkUnsafeHeaders = this.unsafeHeadersEnabled();\n    }\n\n    if (checkUnsafeHeaders && (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header))) {\n      throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n    }\n\n    if (this.requestHeaders[header]) {\n      this.requestHeaders[header] += \",\" + value;\n    } else {\n      this.requestHeaders[header] = value;\n    }\n  },\n  setStatus: function setStatus(status) {\n    var sanitizedStatus = typeof status === \"number\" ? status : 200;\n    verifyRequestOpened(this);\n    this.status = sanitizedStatus;\n    this.statusText = FakeXMLHttpRequest.statusCodes[sanitizedStatus];\n  },\n  // Helps testing\n  setResponseHeaders: function setResponseHeaders(headers) {\n    verifyRequestOpened(this);\n    var responseHeaders = this.responseHeaders = {};\n    Object.keys(headers).forEach(function (header) {\n      responseHeaders[header] = headers[header];\n    });\n\n    if (this.async) {\n      this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n    } else {\n      this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n    }\n  },\n  // Currently treats ALL data as a DOMString (i.e. no Document)\n  send: function send(data) {\n    verifyState(this);\n\n    if (!/^(head)$/i.test(this.method)) {\n      var contentType = getHeader(this.requestHeaders, \"Content-Type\");\n\n      if (this.requestHeaders[contentType]) {\n        var value = this.requestHeaders[contentType].split(\";\");\n        this.requestHeaders[contentType] = value[0] + \";charset=utf-8\";\n      } else if (supportsFormData && !(data instanceof FormData)) {\n        this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=utf-8\";\n      }\n\n      this.requestBody = data;\n    }\n\n    this.errorFlag = false;\n    this.sendFlag = this.async;\n    clearResponse(this);\n    this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\n    if (typeof this.onSend === \"function\") {\n      this.onSend(this);\n    }\n\n    this.dispatchEvent(new sinonEvent.Event(\"loadstart\", false, false, this));\n  },\n  abort: function abort() {\n    this.aborted = true;\n    clearResponse(this);\n    this.errorFlag = true;\n    this.requestHeaders = {};\n    this.responseHeaders = {};\n\n    if (this.readyState !== FakeXMLHttpRequest.UNSENT && this.sendFlag && this.readyState !== FakeXMLHttpRequest.DONE) {\n      this.readyStateChange(FakeXMLHttpRequest.DONE);\n      this.sendFlag = false;\n    }\n\n    this.readyState = FakeXMLHttpRequest.UNSENT;\n  },\n  error: function () {\n    clearResponse(this);\n    this.errorFlag = true;\n    this.requestHeaders = {};\n    this.responseHeaders = {};\n    this.readyStateChange(FakeXMLHttpRequest.DONE);\n  },\n  getResponseHeader: function getResponseHeader(header) {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return null;\n    }\n\n    if (/^Set-Cookie2?$/i.test(header)) {\n      return null;\n    }\n\n    header = getHeader(this.responseHeaders, header);\n    return this.responseHeaders[header] || null;\n  },\n  getAllResponseHeaders: function getAllResponseHeaders() {\n    if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n      return \"\";\n    }\n\n    var responseHeaders = this.responseHeaders;\n    var headers = Object.keys(responseHeaders).filter(excludeSetCookie2Header).reduce(function (prev, header) {\n      var value = responseHeaders[header];\n      return prev + (header + \": \" + value + \"\\r\\n\");\n    }, \"\");\n    return headers;\n  },\n  setResponseBody: function setResponseBody(body) {\n    verifyRequestSent(this);\n    verifyHeadersReceived(this);\n    verifyResponseBodyType(body);\n    var contentType = this.overriddenMimeType || this.getResponseHeader(\"Content-Type\");\n    var isTextResponse = this.responseType === \"\" || this.responseType === \"text\";\n    clearResponse(this);\n\n    if (this.async) {\n      var chunkSize = this.chunkSize || 10;\n      var index = 0;\n\n      do {\n        this.readyStateChange(FakeXMLHttpRequest.LOADING);\n\n        if (isTextResponse) {\n          this.responseText = this.response += body.substring(index, index + chunkSize);\n        }\n\n        index += chunkSize;\n      } while (index < body.length);\n    }\n\n    this.response = convertResponseBody(this.responseType, contentType, body);\n\n    if (isTextResponse) {\n      this.responseText = this.response;\n    }\n\n    if (this.responseType === \"document\") {\n      this.responseXML = this.response;\n    } else if (this.responseType === \"\" && isXmlContentType(contentType)) {\n      this.responseXML = FakeXMLHttpRequest.parseXML(this.responseText);\n    }\n\n    this.readyStateChange(FakeXMLHttpRequest.DONE);\n  },\n  respond: function respond(status, headers, body) {\n    this.setStatus(status);\n    this.setResponseHeaders(headers || {});\n    this.setResponseBody(body || \"\");\n  },\n  uploadProgress: function uploadProgress(progressEventRaw) {\n    if (supportsProgress) {\n      this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n    }\n  },\n  downloadProgress: function downloadProgress(progressEventRaw) {\n    if (supportsProgress) {\n      this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n    }\n  },\n  uploadError: function uploadError(error) {\n    if (supportsCustomEvent) {\n      this.upload.dispatchEvent(new sinonEvent.CustomEvent(\"error\", {\n        detail: error\n      }));\n    }\n  },\n  overrideMimeType: function overrideMimeType(type) {\n    if (this.readyState >= FakeXMLHttpRequest.LOADING) {\n      throw new Error(\"INVALID_STATE_ERR\");\n    }\n\n    this.overriddenMimeType = type;\n  }\n});\nvar states = {\n  UNSENT: 0,\n  OPENED: 1,\n  HEADERS_RECEIVED: 2,\n  LOADING: 3,\n  DONE: 4\n};\nextend(FakeXMLHttpRequest, states);\nextend(FakeXMLHttpRequest.prototype, states);\n\nfunction useFakeXMLHttpRequest() {\n  FakeXMLHttpRequest.restore = function restore(keepOnCreate) {\n    if (sinonXhr.supportsXHR) {\n      global.XMLHttpRequest = sinonXhr.GlobalXMLHttpRequest;\n    }\n\n    if (sinonXhr.supportsActiveX) {\n      global.ActiveXObject = sinonXhr.GlobalActiveXObject;\n    }\n\n    delete FakeXMLHttpRequest.restore;\n\n    if (keepOnCreate !== true) {\n      delete FakeXMLHttpRequest.onCreate;\n    }\n  };\n\n  if (sinonXhr.supportsXHR) {\n    global.XMLHttpRequest = FakeXMLHttpRequest;\n  }\n\n  if (sinonXhr.supportsActiveX) {\n    global.ActiveXObject = function ActiveXObject(objId) {\n      if (objId === \"Microsoft.XMLHTTP\" || /^Msxml2\\.XMLHTTP/i.test(objId)) {\n        return new FakeXMLHttpRequest();\n      }\n\n      return new sinonXhr.GlobalActiveXObject(objId);\n    };\n  }\n\n  return FakeXMLHttpRequest;\n}\n\nmodule.exports = {\n  xhr: sinonXhr,\n  FakeXMLHttpRequest: FakeXMLHttpRequest,\n  useFakeXMLHttpRequest: useFakeXMLHttpRequest\n};","map":{"version":3,"names":["TextEncoder","require","configureLogError","sinonEvent","extend","getWorkingXHR","globalScope","supportsXHR","XMLHttpRequest","supportsActiveX","ActiveXObject","supportsProgress","ProgressEvent","supportsCustomEvent","CustomEvent","supportsFormData","FormData","supportsArrayBuffer","ArrayBuffer","supportsBlob","isSupported","isReactNative","global","navigator","product","sinonXhr","GlobalXMLHttpRequest","GlobalActiveXObject","workingXHR","supportsCORS","unsafeHeaders","EventTargetHandler","self","events","addEventListener","eventName","event","listener","call","forEach","prototype","EventTarget","FakeXMLHttpRequest","config","readyState","UNSENT","requestHeaders","requestBody","status","statusText","upload","responseType","response","logError","withCredentials","onCreate","verifyState","xhr","OPENED","Error","sendFlag","getHeader","headers","header","foundHeader","Object","keys","filter","h","toLowerCase","excludeSetCookie2Header","test","apply","obj","method","args","length","filters","addFilter","fn","push","defake","fakeXhr","xhrArgs","arguments","copyAttrs","attr","stateChange","HEADERS_RECEIVED","LOADING","DONE","onreadystatechange","target","eventListeners","handler","useFilters","verifyRequestOpened","verifyRequestSent","verifyHeadersReceived","async","verifyResponseBodyType","body","error","name","convertToArrayBuffer","encoding","encode","buffer","isXmlContentType","contentType","convertResponseBody","JSON","parse","e","blobOptions","type","Blob","parseXML","clearResponse","responseText","responseXML","text","DOMParser","parser","parseFromString","xmlDoc","window","loadXML","statusCodes","open","url","username","password","some","readyStateChange","state","readyStateChangeEvent","Event","progress","aborted","loaded","total","dispatchEvent","setRequestHeader","value","checkUnsafeHeaders","unsafeHeadersEnabled","setStatus","sanitizedStatus","setResponseHeaders","responseHeaders","send","data","split","errorFlag","onSend","abort","getResponseHeader","getAllResponseHeaders","reduce","prev","setResponseBody","overriddenMimeType","isTextResponse","chunkSize","index","substring","respond","uploadProgress","progressEventRaw","downloadProgress","uploadError","detail","overrideMimeType","states","useFakeXMLHttpRequest","restore","keepOnCreate","objId","module","exports"],"sources":["/Users/victorcosta/Desktop/repositories/react-project/hooks-study/node_modules/sinon/lib/sinon/util/fake_xml_http_request.js"],"sourcesContent":["\"use strict\";\n\nvar TextEncoder = require(\"text-encoding\").TextEncoder;\n\nvar configureLogError = require(\"./core/log_error\");\nvar sinonEvent = require(\"./event\");\nvar extend = require(\"./core/extend\");\n\nfunction getWorkingXHR(globalScope) {\n    var supportsXHR = typeof globalScope.XMLHttpRequest !== \"undefined\";\n    if (supportsXHR) {\n        return globalScope.XMLHttpRequest;\n    }\n\n    var supportsActiveX = typeof globalScope.ActiveXObject !== \"undefined\";\n    if (supportsActiveX) {\n        return function () {\n            return new globalScope.ActiveXObject(\"MSXML2.XMLHTTP.3.0\");\n        };\n    }\n\n    return false;\n}\n\nvar supportsProgress = typeof ProgressEvent !== \"undefined\";\nvar supportsCustomEvent = typeof CustomEvent !== \"undefined\";\nvar supportsFormData = typeof FormData !== \"undefined\";\nvar supportsArrayBuffer = typeof ArrayBuffer !== \"undefined\";\nvar supportsBlob = require(\"../blob\").isSupported;\nvar isReactNative = global.navigator && global.navigator.product === \"ReactNative\";\nvar sinonXhr = { XMLHttpRequest: global.XMLHttpRequest };\nsinonXhr.GlobalXMLHttpRequest = global.XMLHttpRequest;\nsinonXhr.GlobalActiveXObject = global.ActiveXObject;\nsinonXhr.supportsActiveX = typeof sinonXhr.GlobalActiveXObject !== \"undefined\";\nsinonXhr.supportsXHR = typeof sinonXhr.GlobalXMLHttpRequest !== \"undefined\";\nsinonXhr.workingXHR = getWorkingXHR(global);\nsinonXhr.supportsCORS = isReactNative ||\n    (sinonXhr.supportsXHR && \"withCredentials\" in (new sinonXhr.GlobalXMLHttpRequest()));\n\nvar unsafeHeaders = {\n    \"Accept-Charset\": true,\n    \"Accept-Encoding\": true,\n    \"Connection\": true,\n    \"Content-Length\": true,\n    \"Cookie\": true,\n    \"Cookie2\": true,\n    \"Content-Transfer-Encoding\": true,\n    \"Date\": true,\n    \"Expect\": true,\n    \"Host\": true,\n    \"Keep-Alive\": true,\n    \"Referer\": true,\n    \"TE\": true,\n    \"Trailer\": true,\n    \"Transfer-Encoding\": true,\n    \"Upgrade\": true,\n    \"User-Agent\": true,\n    \"Via\": true\n};\n\n\nfunction EventTargetHandler() {\n    var self = this;\n    var events = [\"loadstart\", \"progress\", \"abort\", \"error\", \"load\", \"timeout\", \"loadend\"];\n\n    function addEventListener(eventName) {\n        self.addEventListener(eventName, function (event) {\n            var listener = self[\"on\" + eventName];\n\n            if (listener && typeof listener === \"function\") {\n                listener.call(this, event);\n            }\n        });\n    }\n\n    events.forEach(addEventListener);\n}\n\nEventTargetHandler.prototype = sinonEvent.EventTarget;\n\n// Note that for FakeXMLHttpRequest to work pre ES5\n// we lose some of the alignment with the spec.\n// To ensure as close a match as possible,\n// set responseType before calling open, send or respond;\nfunction FakeXMLHttpRequest(config) {\n    EventTargetHandler.call(this);\n    this.readyState = FakeXMLHttpRequest.UNSENT;\n    this.requestHeaders = {};\n    this.requestBody = null;\n    this.status = 0;\n    this.statusText = \"\";\n    this.upload = new EventTargetHandler();\n    this.responseType = \"\";\n    this.response = \"\";\n    this.logError = configureLogError(config);\n    if (sinonXhr.supportsCORS) {\n        this.withCredentials = false;\n    }\n\n    if (typeof FakeXMLHttpRequest.onCreate === \"function\") {\n        FakeXMLHttpRequest.onCreate(this);\n    }\n}\n\nfunction verifyState(xhr) {\n    if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n        throw new Error(\"INVALID_STATE_ERR\");\n    }\n\n    if (xhr.sendFlag) {\n        throw new Error(\"INVALID_STATE_ERR\");\n    }\n}\n\nfunction getHeader(headers, header) {\n    var foundHeader = Object.keys(headers).filter(function (h) {\n        return h.toLowerCase() === header.toLowerCase();\n    });\n\n    return foundHeader[0] || null;\n}\n\nfunction excludeSetCookie2Header(header) {\n    return !/^Set-Cookie2?$/i.test(header);\n}\n\n// largest arity in XHR is 5 - XHR#open\nvar apply = function (obj, method, args) {\n    switch (args.length) {\n        case 0: return obj[method]();\n        case 1: return obj[method](args[0]);\n        case 2: return obj[method](args[0], args[1]);\n        case 3: return obj[method](args[0], args[1], args[2]);\n        case 4: return obj[method](args[0], args[1], args[2], args[3]);\n        case 5: return obj[method](args[0], args[1], args[2], args[3], args[4]);\n        default: throw new Error(\"Unhandled case\");\n    }\n};\n\nFakeXMLHttpRequest.filters = [];\nFakeXMLHttpRequest.addFilter = function addFilter(fn) {\n    this.filters.push(fn);\n};\nFakeXMLHttpRequest.defake = function defake(fakeXhr, xhrArgs) {\n    var xhr = new sinonXhr.workingXHR(); // eslint-disable-line new-cap\n\n    [\n        \"open\",\n        \"setRequestHeader\",\n        \"send\",\n        \"abort\",\n        \"getResponseHeader\",\n        \"getAllResponseHeaders\",\n        \"addEventListener\",\n        \"overrideMimeType\",\n        \"removeEventListener\"\n    ].forEach(function (method) {\n        fakeXhr[method] = function () {\n            return apply(xhr, method, arguments);\n        };\n    });\n\n    var copyAttrs = function (args) {\n        args.forEach(function (attr) {\n            fakeXhr[attr] = xhr[attr];\n        });\n    };\n\n    var stateChange = function stateChange() {\n        fakeXhr.readyState = xhr.readyState;\n        if (xhr.readyState >= FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            copyAttrs([\"status\", \"statusText\"]);\n        }\n        if (xhr.readyState >= FakeXMLHttpRequest.LOADING) {\n            copyAttrs([\"responseText\", \"response\"]);\n        }\n        if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n            copyAttrs([\"responseXML\"]);\n        }\n        if (fakeXhr.onreadystatechange) {\n            fakeXhr.onreadystatechange.call(fakeXhr, { target: fakeXhr });\n        }\n    };\n\n    if (xhr.addEventListener) {\n        Object.keys(fakeXhr.eventListeners).forEach(function (event) {\n            /*eslint-disable no-loop-func*/\n            fakeXhr.eventListeners[event].forEach(function (handler) {\n                xhr.addEventListener(event, handler);\n            });\n            /*eslint-enable no-loop-func*/\n        });\n\n        xhr.addEventListener(\"readystatechange\", stateChange);\n    } else {\n        xhr.onreadystatechange = stateChange;\n    }\n    apply(xhr, \"open\", xhrArgs);\n};\nFakeXMLHttpRequest.useFilters = false;\n\nfunction verifyRequestOpened(xhr) {\n    if (xhr.readyState !== FakeXMLHttpRequest.OPENED) {\n        throw new Error(\"INVALID_STATE_ERR - \" + xhr.readyState);\n    }\n}\n\nfunction verifyRequestSent(xhr) {\n    if (xhr.readyState === FakeXMLHttpRequest.DONE) {\n        throw new Error(\"Request done\");\n    }\n}\n\nfunction verifyHeadersReceived(xhr) {\n    if (xhr.async && xhr.readyState !== FakeXMLHttpRequest.HEADERS_RECEIVED) {\n        throw new Error(\"No headers received\");\n    }\n}\n\nfunction verifyResponseBodyType(body) {\n    if (typeof body !== \"string\") {\n        var error = new Error(\"Attempted to respond to fake XMLHttpRequest with \" +\n                             body + \", which is not a string.\");\n        error.name = \"InvalidBodyException\";\n        throw error;\n    }\n}\n\nfunction convertToArrayBuffer(body, encoding) {\n    return new TextEncoder(encoding || \"utf-8\").encode(body).buffer;\n}\n\nfunction isXmlContentType(contentType) {\n    return !contentType || /(text\\/xml)|(application\\/xml)|(\\+xml)/.test(contentType);\n}\n\nfunction convertResponseBody(responseType, contentType, body) {\n    if (responseType === \"\" || responseType === \"text\") {\n        return body;\n    } else if (supportsArrayBuffer && responseType === \"arraybuffer\") {\n        return convertToArrayBuffer(body);\n    } else if (responseType === \"json\") {\n        try {\n            return JSON.parse(body);\n        } catch (e) {\n            // Return parsing failure as null\n            return null;\n        }\n    } else if (supportsBlob && responseType === \"blob\") {\n        var blobOptions = {};\n        if (contentType) {\n            blobOptions.type = contentType;\n        }\n        return new Blob([convertToArrayBuffer(body)], blobOptions);\n    } else if (responseType === \"document\") {\n        if (isXmlContentType(contentType)) {\n            return FakeXMLHttpRequest.parseXML(body);\n        }\n        return null;\n    }\n    throw new Error(\"Invalid responseType \" + responseType);\n}\n\nfunction clearResponse(xhr) {\n    if (xhr.responseType === \"\" || xhr.responseType === \"text\") {\n        xhr.response = xhr.responseText = \"\";\n    } else {\n        xhr.response = xhr.responseText = null;\n    }\n    xhr.responseXML = null;\n}\n\nFakeXMLHttpRequest.parseXML = function parseXML(text) {\n    // Treat empty string as parsing failure\n    if (text !== \"\") {\n        try {\n            if (typeof DOMParser !== \"undefined\") {\n                var parser = new DOMParser();\n                return parser.parseFromString(text, \"text/xml\");\n            }\n            var xmlDoc = new window.ActiveXObject(\"Microsoft.XMLDOM\");\n            xmlDoc.async = \"false\";\n            xmlDoc.loadXML(text);\n            return xmlDoc;\n        } catch (e) {\n            // Unable to parse XML - no biggie\n        }\n    }\n\n    return null;\n};\n\nFakeXMLHttpRequest.statusCodes = {\n    100: \"Continue\",\n    101: \"Switching Protocols\",\n    200: \"OK\",\n    201: \"Created\",\n    202: \"Accepted\",\n    203: \"Non-Authoritative Information\",\n    204: \"No Content\",\n    205: \"Reset Content\",\n    206: \"Partial Content\",\n    207: \"Multi-Status\",\n    300: \"Multiple Choice\",\n    301: \"Moved Permanently\",\n    302: \"Found\",\n    303: \"See Other\",\n    304: \"Not Modified\",\n    305: \"Use Proxy\",\n    307: \"Temporary Redirect\",\n    400: \"Bad Request\",\n    401: \"Unauthorized\",\n    402: \"Payment Required\",\n    403: \"Forbidden\",\n    404: \"Not Found\",\n    405: \"Method Not Allowed\",\n    406: \"Not Acceptable\",\n    407: \"Proxy Authentication Required\",\n    408: \"Request Timeout\",\n    409: \"Conflict\",\n    410: \"Gone\",\n    411: \"Length Required\",\n    412: \"Precondition Failed\",\n    413: \"Request Entity Too Large\",\n    414: \"Request-URI Too Long\",\n    415: \"Unsupported Media Type\",\n    416: \"Requested Range Not Satisfiable\",\n    417: \"Expectation Failed\",\n    422: \"Unprocessable Entity\",\n    500: \"Internal Server Error\",\n    501: \"Not Implemented\",\n    502: \"Bad Gateway\",\n    503: \"Service Unavailable\",\n    504: \"Gateway Timeout\",\n    505: \"HTTP Version Not Supported\"\n};\n\nextend(FakeXMLHttpRequest.prototype, sinonEvent.EventTarget, {\n    async: true,\n\n    open: function open(method, url, async, username, password) {\n        this.method = method;\n        this.url = url;\n        this.async = typeof async === \"boolean\" ? async : true;\n        this.username = username;\n        this.password = password;\n        clearResponse(this);\n        this.requestHeaders = {};\n        this.sendFlag = false;\n\n        if (FakeXMLHttpRequest.useFilters === true) {\n            var xhrArgs = arguments;\n            var defake = FakeXMLHttpRequest.filters.some(function (filter) {\n                return filter.apply(this, xhrArgs);\n            });\n            if (defake) {\n                FakeXMLHttpRequest.defake(this, arguments);\n                return;\n            }\n        }\n        this.readyStateChange(FakeXMLHttpRequest.OPENED);\n    },\n\n    readyStateChange: function readyStateChange(state) {\n        this.readyState = state;\n\n        var readyStateChangeEvent = new sinonEvent.Event(\"readystatechange\", false, false, this);\n        var event, progress;\n\n        if (typeof this.onreadystatechange === \"function\") {\n            try {\n                this.onreadystatechange(readyStateChangeEvent);\n            } catch (e) {\n                this.logError(\"Fake XHR onreadystatechange handler\", e);\n            }\n        }\n\n        if (this.readyState === FakeXMLHttpRequest.DONE) {\n            if (this.aborted || this.status === 0) {\n                progress = {loaded: 0, total: 0};\n                event = this.aborted ? \"abort\" : \"error\";\n            } else {\n                progress = {loaded: 100, total: 100};\n                event = \"load\";\n            }\n\n            if (supportsProgress) {\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n                this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n            }\n\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progress, this));\n            this.dispatchEvent(new sinonEvent.ProgressEvent(event, progress, this));\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"loadend\", progress, this));\n        }\n\n        this.dispatchEvent(readyStateChangeEvent);\n    },\n\n    setRequestHeader: function setRequestHeader(header, value) {\n        verifyState(this);\n\n        var checkUnsafeHeaders = true;\n        if (typeof this.unsafeHeadersEnabled === \"function\") {\n            checkUnsafeHeaders = this.unsafeHeadersEnabled();\n        }\n\n        if (checkUnsafeHeaders && (unsafeHeaders[header] || /^(Sec-|Proxy-)/.test(header))) {\n            throw new Error(\"Refused to set unsafe header \\\"\" + header + \"\\\"\");\n        }\n\n        if (this.requestHeaders[header]) {\n            this.requestHeaders[header] += \",\" + value;\n        } else {\n            this.requestHeaders[header] = value;\n        }\n    },\n\n    setStatus: function setStatus(status) {\n        var sanitizedStatus = typeof status === \"number\" ? status : 200;\n\n        verifyRequestOpened(this);\n        this.status = sanitizedStatus;\n        this.statusText = FakeXMLHttpRequest.statusCodes[sanitizedStatus];\n    },\n\n    // Helps testing\n    setResponseHeaders: function setResponseHeaders(headers) {\n        verifyRequestOpened(this);\n\n        var responseHeaders = this.responseHeaders = {};\n\n        Object.keys(headers).forEach(function (header) {\n            responseHeaders[header] = headers[header];\n        });\n\n        if (this.async) {\n            this.readyStateChange(FakeXMLHttpRequest.HEADERS_RECEIVED);\n        } else {\n            this.readyState = FakeXMLHttpRequest.HEADERS_RECEIVED;\n        }\n    },\n\n    // Currently treats ALL data as a DOMString (i.e. no Document)\n    send: function send(data) {\n        verifyState(this);\n\n        if (!/^(head)$/i.test(this.method)) {\n            var contentType = getHeader(this.requestHeaders, \"Content-Type\");\n            if (this.requestHeaders[contentType]) {\n                var value = this.requestHeaders[contentType].split(\";\");\n                this.requestHeaders[contentType] = value[0] + \";charset=utf-8\";\n            } else if (supportsFormData && !(data instanceof FormData)) {\n                this.requestHeaders[\"Content-Type\"] = \"text/plain;charset=utf-8\";\n            }\n\n            this.requestBody = data;\n        }\n\n        this.errorFlag = false;\n        this.sendFlag = this.async;\n        clearResponse(this);\n        this.readyStateChange(FakeXMLHttpRequest.OPENED);\n\n        if (typeof this.onSend === \"function\") {\n            this.onSend(this);\n        }\n\n        this.dispatchEvent(new sinonEvent.Event(\"loadstart\", false, false, this));\n    },\n\n    abort: function abort() {\n        this.aborted = true;\n        clearResponse(this);\n        this.errorFlag = true;\n        this.requestHeaders = {};\n        this.responseHeaders = {};\n\n        if (this.readyState !== FakeXMLHttpRequest.UNSENT && this.sendFlag\n            && this.readyState !== FakeXMLHttpRequest.DONE) {\n            this.readyStateChange(FakeXMLHttpRequest.DONE);\n            this.sendFlag = false;\n        }\n\n        this.readyState = FakeXMLHttpRequest.UNSENT;\n    },\n\n    error: function () {\n        clearResponse(this);\n        this.errorFlag = true;\n        this.requestHeaders = {};\n        this.responseHeaders = {};\n\n        this.readyStateChange(FakeXMLHttpRequest.DONE);\n    },\n\n    getResponseHeader: function getResponseHeader(header) {\n        if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            return null;\n        }\n\n        if (/^Set-Cookie2?$/i.test(header)) {\n            return null;\n        }\n\n        header = getHeader(this.responseHeaders, header);\n\n        return this.responseHeaders[header] || null;\n    },\n\n    getAllResponseHeaders: function getAllResponseHeaders() {\n        if (this.readyState < FakeXMLHttpRequest.HEADERS_RECEIVED) {\n            return \"\";\n        }\n\n        var responseHeaders = this.responseHeaders;\n        var headers = Object.keys(responseHeaders)\n            .filter(excludeSetCookie2Header)\n            .reduce(function (prev, header) {\n                var value = responseHeaders[header];\n\n                return prev + (header + \": \" + value + \"\\r\\n\");\n            }, \"\");\n\n        return headers;\n    },\n\n    setResponseBody: function setResponseBody(body) {\n        verifyRequestSent(this);\n        verifyHeadersReceived(this);\n        verifyResponseBodyType(body);\n        var contentType = this.overriddenMimeType || this.getResponseHeader(\"Content-Type\");\n\n        var isTextResponse = this.responseType === \"\" || this.responseType === \"text\";\n        clearResponse(this);\n        if (this.async) {\n            var chunkSize = this.chunkSize || 10;\n            var index = 0;\n\n            do {\n                this.readyStateChange(FakeXMLHttpRequest.LOADING);\n\n                if (isTextResponse) {\n                    this.responseText = this.response += body.substring(index, index + chunkSize);\n                }\n                index += chunkSize;\n            } while (index < body.length);\n        }\n\n        this.response = convertResponseBody(this.responseType, contentType, body);\n        if (isTextResponse) {\n            this.responseText = this.response;\n        }\n\n        if (this.responseType === \"document\") {\n            this.responseXML = this.response;\n        } else if (this.responseType === \"\" && isXmlContentType(contentType)) {\n            this.responseXML = FakeXMLHttpRequest.parseXML(this.responseText);\n        }\n        this.readyStateChange(FakeXMLHttpRequest.DONE);\n    },\n\n    respond: function respond(status, headers, body) {\n        this.setStatus(status);\n        this.setResponseHeaders(headers || {});\n        this.setResponseBody(body || \"\");\n    },\n\n    uploadProgress: function uploadProgress(progressEventRaw) {\n        if (supportsProgress) {\n            this.upload.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n        }\n    },\n\n    downloadProgress: function downloadProgress(progressEventRaw) {\n        if (supportsProgress) {\n            this.dispatchEvent(new sinonEvent.ProgressEvent(\"progress\", progressEventRaw));\n        }\n    },\n\n    uploadError: function uploadError(error) {\n        if (supportsCustomEvent) {\n            this.upload.dispatchEvent(new sinonEvent.CustomEvent(\"error\", {detail: error}));\n        }\n    },\n\n    overrideMimeType: function overrideMimeType(type) {\n        if (this.readyState >= FakeXMLHttpRequest.LOADING) {\n            throw new Error(\"INVALID_STATE_ERR\");\n        }\n        this.overriddenMimeType = type;\n    }\n});\n\nvar states = {\n    UNSENT: 0,\n    OPENED: 1,\n    HEADERS_RECEIVED: 2,\n    LOADING: 3,\n    DONE: 4\n};\n\nextend(FakeXMLHttpRequest, states);\nextend(FakeXMLHttpRequest.prototype, states);\n\nfunction useFakeXMLHttpRequest() {\n    FakeXMLHttpRequest.restore = function restore(keepOnCreate) {\n        if (sinonXhr.supportsXHR) {\n            global.XMLHttpRequest = sinonXhr.GlobalXMLHttpRequest;\n        }\n\n        if (sinonXhr.supportsActiveX) {\n            global.ActiveXObject = sinonXhr.GlobalActiveXObject;\n        }\n\n        delete FakeXMLHttpRequest.restore;\n\n        if (keepOnCreate !== true) {\n            delete FakeXMLHttpRequest.onCreate;\n        }\n    };\n    if (sinonXhr.supportsXHR) {\n        global.XMLHttpRequest = FakeXMLHttpRequest;\n    }\n\n    if (sinonXhr.supportsActiveX) {\n        global.ActiveXObject = function ActiveXObject(objId) {\n            if (objId === \"Microsoft.XMLHTTP\" || /^Msxml2\\.XMLHTTP/i.test(objId)) {\n\n                return new FakeXMLHttpRequest();\n            }\n\n            return new sinonXhr.GlobalActiveXObject(objId);\n        };\n    }\n\n    return FakeXMLHttpRequest;\n}\n\nmodule.exports = {\n    xhr: sinonXhr,\n    FakeXMLHttpRequest: FakeXMLHttpRequest,\n    useFakeXMLHttpRequest: useFakeXMLHttpRequest\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}