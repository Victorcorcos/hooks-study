{"ast":null,"code":"\"use strict\";\n\nvar deepEqual = require(\"./util/core/deep-equal\").use(match); // eslint-disable-line no-use-before-define\n\n\nvar every = require(\"./util/core/every\");\n\nvar functionName = require(\"./util/core/function-name\");\n\nvar iterableToString = require(\"./util/core/iterable-to-string\");\n\nvar typeOf = require(\"./util/core/typeOf\");\n\nvar valueToString = require(\"./util/core/value-to-string\");\n\nvar indexOf = Array.prototype.indexOf;\n\nfunction assertType(value, type, name) {\n  var actual = typeOf(value);\n\n  if (actual !== type) {\n    throw new TypeError(\"Expected type of \" + name + \" to be \" + type + \", but was \" + actual);\n  }\n}\n\nvar matcher = {\n  toString: function () {\n    return this.message;\n  }\n};\n\nfunction isMatcher(object) {\n  return matcher.isPrototypeOf(object);\n}\n\nfunction matchObject(expectation, actual) {\n  if (actual === null || actual === undefined) {\n    return false;\n  }\n\n  return Object.keys(expectation).every(function (key) {\n    var exp = expectation[key];\n    var act = actual[key];\n\n    if (isMatcher(exp)) {\n      if (!exp.test(act)) {\n        return false;\n      }\n    } else if (typeOf(exp) === \"object\") {\n      if (!matchObject(exp, act)) {\n        return false;\n      }\n    } else if (!deepEqual(exp, act)) {\n      return false;\n    }\n\n    return true;\n  });\n}\n\nvar TYPE_MAP = {\n  \"function\": function (m, expectation, message) {\n    m.test = expectation;\n    m.message = message || \"match(\" + functionName(expectation) + \")\";\n  },\n  number: function (m, expectation) {\n    m.test = function (actual) {\n      // we need type coercion here\n      return expectation == actual; // eslint-disable-line eqeqeq\n    };\n  },\n  object: function (m, expectation) {\n    var array = [];\n\n    if (typeof expectation.test === \"function\") {\n      m.test = function (actual) {\n        return expectation.test(actual) === true;\n      };\n\n      m.message = \"match(\" + functionName(expectation.test) + \")\";\n      return m;\n    }\n\n    array = Object.keys(expectation).map(function (key) {\n      return key + \": \" + valueToString(expectation[key]);\n    });\n\n    m.test = function (actual) {\n      return matchObject(expectation, actual);\n    };\n\n    m.message = \"match(\" + array.join(\", \") + \")\";\n    return m;\n  },\n  regexp: function (m, expectation) {\n    m.test = function (actual) {\n      return typeof actual === \"string\" && expectation.test(actual);\n    };\n  },\n  string: function (m, expectation) {\n    m.test = function (actual) {\n      return typeof actual === \"string\" && actual.indexOf(expectation) !== -1;\n    };\n\n    m.message = \"match(\\\"\" + expectation + \"\\\")\";\n  }\n};\n\nfunction match(expectation, message) {\n  var m = Object.create(matcher);\n  var type = typeOf(expectation);\n\n  if (type in TYPE_MAP) {\n    TYPE_MAP[type](m, expectation, message);\n  } else {\n    m.test = function (actual) {\n      return deepEqual(expectation, actual);\n    };\n  }\n\n  if (!m.message) {\n    m.message = \"match(\" + valueToString(expectation) + \")\";\n  }\n\n  return m;\n}\n\nmatcher.or = function (m2) {\n  if (!arguments.length) {\n    throw new TypeError(\"Matcher expected\");\n  } else if (!isMatcher(m2)) {\n    m2 = match(m2);\n  }\n\n  var m1 = this;\n  var or = Object.create(matcher);\n\n  or.test = function (actual) {\n    return m1.test(actual) || m2.test(actual);\n  };\n\n  or.message = m1.message + \".or(\" + m2.message + \")\";\n  return or;\n};\n\nmatcher.and = function (m2) {\n  if (!arguments.length) {\n    throw new TypeError(\"Matcher expected\");\n  } else if (!isMatcher(m2)) {\n    m2 = match(m2);\n  }\n\n  var m1 = this;\n  var and = Object.create(matcher);\n\n  and.test = function (actual) {\n    return m1.test(actual) && m2.test(actual);\n  };\n\n  and.message = m1.message + \".and(\" + m2.message + \")\";\n  return and;\n};\n\nmatch.isMatcher = isMatcher;\nmatch.any = match(function () {\n  return true;\n}, \"any\");\nmatch.defined = match(function (actual) {\n  return actual !== null && actual !== undefined;\n}, \"defined\");\nmatch.truthy = match(function (actual) {\n  return !!actual;\n}, \"truthy\");\nmatch.falsy = match(function (actual) {\n  return !actual;\n}, \"falsy\");\n\nmatch.same = function (expectation) {\n  return match(function (actual) {\n    return expectation === actual;\n  }, \"same(\" + valueToString(expectation) + \")\");\n};\n\nmatch.typeOf = function (type) {\n  assertType(type, \"string\", \"type\");\n  return match(function (actual) {\n    return typeOf(actual) === type;\n  }, \"typeOf(\\\"\" + type + \"\\\")\");\n};\n\nmatch.instanceOf = function (type) {\n  assertType(type, \"function\", \"type\");\n  return match(function (actual) {\n    return actual instanceof type;\n  }, \"instanceOf(\" + functionName(type) + \")\");\n};\n\nfunction createPropertyMatcher(propertyTest, messagePrefix) {\n  return function (property, value) {\n    assertType(property, \"string\", \"property\");\n    var onlyProperty = arguments.length === 1;\n    var message = messagePrefix + \"(\\\"\" + property + \"\\\"\";\n\n    if (!onlyProperty) {\n      message += \", \" + valueToString(value);\n    }\n\n    message += \")\";\n    return match(function (actual) {\n      if (actual === undefined || actual === null || !propertyTest(actual, property)) {\n        return false;\n      }\n\n      return onlyProperty || deepEqual(value, actual[property]);\n    }, message);\n  };\n}\n\nmatch.has = createPropertyMatcher(function (actual, property) {\n  if (typeof actual === \"object\") {\n    return property in actual;\n  }\n\n  return actual[property] !== undefined;\n}, \"has\");\nmatch.hasOwn = createPropertyMatcher(function (actual, property) {\n  return actual.hasOwnProperty(property);\n}, \"hasOwn\");\nmatch.array = match.typeOf(\"array\");\n\nmatch.array.deepEquals = function (expectation) {\n  return match(function (actual) {\n    // Comparing lengths is the fastest way to spot a difference before iterating through every item\n    var sameLength = actual.length === expectation.length;\n    return typeOf(actual) === \"array\" && sameLength && every(actual, function (element, index) {\n      return expectation[index] === element;\n    });\n  }, \"deepEquals([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.startsWith = function (expectation) {\n  return match(function (actual) {\n    return typeOf(actual) === \"array\" && every(expectation, function (expectedElement, index) {\n      return actual[index] === expectedElement;\n    });\n  }, \"startsWith([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.endsWith = function (expectation) {\n  return match(function (actual) {\n    // This indicates the index in which we should start matching\n    var offset = actual.length - expectation.length;\n    return typeOf(actual) === \"array\" && every(expectation, function (expectedElement, index) {\n      return actual[offset + index] === expectedElement;\n    });\n  }, \"endsWith([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.contains = function (expectation) {\n  return match(function (actual) {\n    return typeOf(actual) === \"array\" && every(expectation, function (expectedElement) {\n      return indexOf.call(actual, expectedElement) !== -1;\n    });\n  }, \"contains([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.map = match.typeOf(\"map\");\n\nmatch.map.deepEquals = function mapDeepEquals(expectation) {\n  return match(function (actual) {\n    // Comparing lengths is the fastest way to spot a difference before iterating through every item\n    var sameLength = actual.size === expectation.size;\n    return typeOf(actual) === \"map\" && sameLength && every(actual, function (element, key) {\n      return expectation.has(key) && expectation.get(key) === element;\n    });\n  }, \"deepEquals(Map[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.map.contains = function mapContains(expectation) {\n  return match(function (actual) {\n    return typeOf(actual) === \"map\" && every(expectation, function (element, key) {\n      return actual.has(key) && actual.get(key) === element;\n    });\n  }, \"contains(Map[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.set = match.typeOf(\"set\");\n\nmatch.set.deepEquals = function setDeepEquals(expectation) {\n  return match(function (actual) {\n    // Comparing lengths is the fastest way to spot a difference before iterating through every item\n    var sameLength = actual.size === expectation.size;\n    return typeOf(actual) === \"set\" && sameLength && every(actual, function (element) {\n      return expectation.has(element);\n    });\n  }, \"deepEquals(Set[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.set.contains = function setContains(expectation) {\n  return match(function (actual) {\n    return typeOf(actual) === \"set\" && every(expectation, function (element) {\n      return actual.has(element);\n    });\n  }, \"contains(Set[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.bool = match.typeOf(\"boolean\");\nmatch.number = match.typeOf(\"number\");\nmatch.string = match.typeOf(\"string\");\nmatch.object = match.typeOf(\"object\");\nmatch.func = match.typeOf(\"function\");\nmatch.regexp = match.typeOf(\"regexp\");\nmatch.date = match.typeOf(\"date\");\nmatch.symbol = match.typeOf(\"symbol\");\nmodule.exports = match;","map":{"version":3,"names":["deepEqual","require","use","match","every","functionName","iterableToString","typeOf","valueToString","indexOf","Array","prototype","assertType","value","type","name","actual","TypeError","matcher","toString","message","isMatcher","object","isPrototypeOf","matchObject","expectation","undefined","Object","keys","key","exp","act","test","TYPE_MAP","m","number","array","map","join","regexp","string","create","or","m2","arguments","length","m1","and","any","defined","truthy","falsy","same","instanceOf","createPropertyMatcher","propertyTest","messagePrefix","property","onlyProperty","has","hasOwn","hasOwnProperty","deepEquals","sameLength","element","index","startsWith","expectedElement","endsWith","offset","contains","call","mapDeepEquals","size","get","mapContains","set","setDeepEquals","setContains","bool","func","date","symbol","module","exports"],"sources":["/Users/victorcosta/Desktop/repositories/react-project/hooks-study/node_modules/sinon/lib/sinon/match.js"],"sourcesContent":["\"use strict\";\n\nvar deepEqual = require(\"./util/core/deep-equal\").use(match); // eslint-disable-line no-use-before-define\nvar every = require(\"./util/core/every\");\nvar functionName = require(\"./util/core/function-name\");\nvar iterableToString = require(\"./util/core/iterable-to-string\");\nvar typeOf = require(\"./util/core/typeOf\");\nvar valueToString = require(\"./util/core/value-to-string\");\n\nvar indexOf = Array.prototype.indexOf;\n\nfunction assertType(value, type, name) {\n    var actual = typeOf(value);\n    if (actual !== type) {\n        throw new TypeError(\"Expected type of \" + name + \" to be \" +\n            type + \", but was \" + actual);\n    }\n}\n\nvar matcher = {\n    toString: function () {\n        return this.message;\n    }\n};\n\nfunction isMatcher(object) {\n    return matcher.isPrototypeOf(object);\n}\n\nfunction matchObject(expectation, actual) {\n    if (actual === null || actual === undefined) {\n        return false;\n    }\n\n    return Object.keys(expectation).every(function (key) {\n        var exp = expectation[key];\n        var act = actual[key];\n\n        if (isMatcher(exp)) {\n            if (!exp.test(act)) {\n                return false;\n            }\n        } else if (typeOf(exp) === \"object\") {\n            if (!matchObject(exp, act)) {\n                return false;\n            }\n        } else if (!deepEqual(exp, act)) {\n            return false;\n        }\n\n        return true;\n    });\n}\n\nvar TYPE_MAP = {\n    \"function\": function (m, expectation, message) {\n        m.test = expectation;\n        m.message = message || \"match(\" + functionName(expectation) + \")\";\n    },\n    number: function (m, expectation) {\n        m.test = function (actual) {\n            // we need type coercion here\n            return expectation == actual; // eslint-disable-line eqeqeq\n        };\n    },\n    object: function (m, expectation) {\n        var array = [];\n\n        if (typeof expectation.test === \"function\") {\n            m.test = function (actual) {\n                return expectation.test(actual) === true;\n            };\n            m.message = \"match(\" + functionName(expectation.test) + \")\";\n            return m;\n        }\n\n        array = Object.keys(expectation).map(function (key) {\n            return key + \": \" + valueToString(expectation[key]);\n        });\n\n        m.test = function (actual) {\n            return matchObject(expectation, actual);\n        };\n        m.message = \"match(\" + array.join(\", \") + \")\";\n\n        return m;\n    },\n    regexp: function (m, expectation) {\n        m.test = function (actual) {\n            return typeof actual === \"string\" && expectation.test(actual);\n        };\n    },\n    string: function (m, expectation) {\n        m.test = function (actual) {\n            return typeof actual === \"string\" && actual.indexOf(expectation) !== -1;\n        };\n        m.message = \"match(\\\"\" + expectation + \"\\\")\";\n    }\n};\n\nfunction match(expectation, message) {\n    var m = Object.create(matcher);\n    var type = typeOf(expectation);\n\n    if (type in TYPE_MAP) {\n        TYPE_MAP[type](m, expectation, message);\n    } else {\n        m.test = function (actual) {\n            return deepEqual(expectation, actual);\n        };\n    }\n\n    if (!m.message) {\n        m.message = \"match(\" + valueToString(expectation) + \")\";\n    }\n\n    return m;\n}\n\nmatcher.or = function (m2) {\n    if (!arguments.length) {\n        throw new TypeError(\"Matcher expected\");\n    } else if (!isMatcher(m2)) {\n        m2 = match(m2);\n    }\n    var m1 = this;\n    var or = Object.create(matcher);\n    or.test = function (actual) {\n        return m1.test(actual) || m2.test(actual);\n    };\n    or.message = m1.message + \".or(\" + m2.message + \")\";\n    return or;\n};\n\nmatcher.and = function (m2) {\n    if (!arguments.length) {\n        throw new TypeError(\"Matcher expected\");\n    } else if (!isMatcher(m2)) {\n        m2 = match(m2);\n    }\n    var m1 = this;\n    var and = Object.create(matcher);\n    and.test = function (actual) {\n        return m1.test(actual) && m2.test(actual);\n    };\n    and.message = m1.message + \".and(\" + m2.message + \")\";\n    return and;\n};\n\nmatch.isMatcher = isMatcher;\n\nmatch.any = match(function () {\n    return true;\n}, \"any\");\n\nmatch.defined = match(function (actual) {\n    return actual !== null && actual !== undefined;\n}, \"defined\");\n\nmatch.truthy = match(function (actual) {\n    return !!actual;\n}, \"truthy\");\n\nmatch.falsy = match(function (actual) {\n    return !actual;\n}, \"falsy\");\n\nmatch.same = function (expectation) {\n    return match(function (actual) {\n        return expectation === actual;\n    }, \"same(\" + valueToString(expectation) + \")\");\n};\n\nmatch.typeOf = function (type) {\n    assertType(type, \"string\", \"type\");\n    return match(function (actual) {\n        return typeOf(actual) === type;\n    }, \"typeOf(\\\"\" + type + \"\\\")\");\n};\n\nmatch.instanceOf = function (type) {\n    assertType(type, \"function\", \"type\");\n    return match(function (actual) {\n        return actual instanceof type;\n    }, \"instanceOf(\" + functionName(type) + \")\");\n};\n\nfunction createPropertyMatcher(propertyTest, messagePrefix) {\n    return function (property, value) {\n        assertType(property, \"string\", \"property\");\n        var onlyProperty = arguments.length === 1;\n        var message = messagePrefix + \"(\\\"\" + property + \"\\\"\";\n        if (!onlyProperty) {\n            message += \", \" + valueToString(value);\n        }\n        message += \")\";\n        return match(function (actual) {\n            if (actual === undefined || actual === null ||\n                    !propertyTest(actual, property)) {\n                return false;\n            }\n            return onlyProperty || deepEqual(value, actual[property]);\n        }, message);\n    };\n}\n\nmatch.has = createPropertyMatcher(function (actual, property) {\n    if (typeof actual === \"object\") {\n        return property in actual;\n    }\n    return actual[property] !== undefined;\n}, \"has\");\n\nmatch.hasOwn = createPropertyMatcher(function (actual, property) {\n    return actual.hasOwnProperty(property);\n}, \"hasOwn\");\n\nmatch.array = match.typeOf(\"array\");\n\nmatch.array.deepEquals = function (expectation) {\n    return match(function (actual) {\n        // Comparing lengths is the fastest way to spot a difference before iterating through every item\n        var sameLength = actual.length === expectation.length;\n        return typeOf(actual) === \"array\" && sameLength && every(actual, function (element, index) {\n            return expectation[index] === element;\n        });\n    }, \"deepEquals([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.startsWith = function (expectation) {\n    return match(function (actual) {\n        return typeOf(actual) === \"array\" && every(expectation, function (expectedElement, index) {\n            return actual[index] === expectedElement;\n        });\n    }, \"startsWith([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.endsWith = function (expectation) {\n    return match(function (actual) {\n        // This indicates the index in which we should start matching\n        var offset = actual.length - expectation.length;\n\n        return typeOf(actual) === \"array\" && every(expectation, function (expectedElement, index) {\n            return actual[offset + index] === expectedElement;\n        });\n    }, \"endsWith([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.array.contains = function (expectation) {\n    return match(function (actual) {\n        return typeOf(actual) === \"array\" && every(expectation, function (expectedElement) {\n            return indexOf.call(actual, expectedElement) !== -1;\n        });\n    }, \"contains([\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.map = match.typeOf(\"map\");\n\nmatch.map.deepEquals = function mapDeepEquals(expectation) {\n    return match(function (actual) {\n        // Comparing lengths is the fastest way to spot a difference before iterating through every item\n        var sameLength = actual.size === expectation.size;\n        return typeOf(actual) === \"map\" && sameLength && every(actual, function (element, key) {\n            return expectation.has(key) && expectation.get(key) === element;\n        });\n    }, \"deepEquals(Map[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.map.contains = function mapContains(expectation) {\n    return match(function (actual) {\n        return typeOf(actual) === \"map\" && every(expectation, function (element, key) {\n            return actual.has(key) && actual.get(key) === element;\n        });\n    }, \"contains(Map[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.set = match.typeOf(\"set\");\n\nmatch.set.deepEquals = function setDeepEquals(expectation) {\n    return match(function (actual) {\n        // Comparing lengths is the fastest way to spot a difference before iterating through every item\n        var sameLength = actual.size === expectation.size;\n        return typeOf(actual) === \"set\" && sameLength && every(actual, function (element) {\n            return expectation.has(element);\n        });\n    }, \"deepEquals(Set[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.set.contains = function setContains(expectation) {\n    return match(function (actual) {\n        return typeOf(actual) === \"set\" && every(expectation, function (element) {\n            return actual.has(element);\n        });\n    }, \"contains(Set[\" + iterableToString(expectation) + \"])\");\n};\n\nmatch.bool = match.typeOf(\"boolean\");\nmatch.number = match.typeOf(\"number\");\nmatch.string = match.typeOf(\"string\");\nmatch.object = match.typeOf(\"object\");\nmatch.func = match.typeOf(\"function\");\nmatch.regexp = match.typeOf(\"regexp\");\nmatch.date = match.typeOf(\"date\");\nmatch.symbol = match.typeOf(\"symbol\");\n\nmodule.exports = match;\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,wBAAD,CAAP,CAAkCC,GAAlC,CAAsCC,KAAtC,CAAhB,C,CAA8D;;;AAC9D,IAAIC,KAAK,GAAGH,OAAO,CAAC,mBAAD,CAAnB;;AACA,IAAII,YAAY,GAAGJ,OAAO,CAAC,2BAAD,CAA1B;;AACA,IAAIK,gBAAgB,GAAGL,OAAO,CAAC,gCAAD,CAA9B;;AACA,IAAIM,MAAM,GAAGN,OAAO,CAAC,oBAAD,CAApB;;AACA,IAAIO,aAAa,GAAGP,OAAO,CAAC,6BAAD,CAA3B;;AAEA,IAAIQ,OAAO,GAAGC,KAAK,CAACC,SAAN,CAAgBF,OAA9B;;AAEA,SAASG,UAAT,CAAoBC,KAApB,EAA2BC,IAA3B,EAAiCC,IAAjC,EAAuC;EACnC,IAAIC,MAAM,GAAGT,MAAM,CAACM,KAAD,CAAnB;;EACA,IAAIG,MAAM,KAAKF,IAAf,EAAqB;IACjB,MAAM,IAAIG,SAAJ,CAAc,sBAAsBF,IAAtB,GAA6B,SAA7B,GAChBD,IADgB,GACT,YADS,GACME,MADpB,CAAN;EAEH;AACJ;;AAED,IAAIE,OAAO,GAAG;EACVC,QAAQ,EAAE,YAAY;IAClB,OAAO,KAAKC,OAAZ;EACH;AAHS,CAAd;;AAMA,SAASC,SAAT,CAAmBC,MAAnB,EAA2B;EACvB,OAAOJ,OAAO,CAACK,aAAR,CAAsBD,MAAtB,CAAP;AACH;;AAED,SAASE,WAAT,CAAqBC,WAArB,EAAkCT,MAAlC,EAA0C;EACtC,IAAIA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKU,SAAlC,EAA6C;IACzC,OAAO,KAAP;EACH;;EAED,OAAOC,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBrB,KAAzB,CAA+B,UAAUyB,GAAV,EAAe;IACjD,IAAIC,GAAG,GAAGL,WAAW,CAACI,GAAD,CAArB;IACA,IAAIE,GAAG,GAAGf,MAAM,CAACa,GAAD,CAAhB;;IAEA,IAAIR,SAAS,CAACS,GAAD,CAAb,EAAoB;MAChB,IAAI,CAACA,GAAG,CAACE,IAAJ,CAASD,GAAT,CAAL,EAAoB;QAChB,OAAO,KAAP;MACH;IACJ,CAJD,MAIO,IAAIxB,MAAM,CAACuB,GAAD,CAAN,KAAgB,QAApB,EAA8B;MACjC,IAAI,CAACN,WAAW,CAACM,GAAD,EAAMC,GAAN,CAAhB,EAA4B;QACxB,OAAO,KAAP;MACH;IACJ,CAJM,MAIA,IAAI,CAAC/B,SAAS,CAAC8B,GAAD,EAAMC,GAAN,CAAd,EAA0B;MAC7B,OAAO,KAAP;IACH;;IAED,OAAO,IAAP;EACH,CAjBM,CAAP;AAkBH;;AAED,IAAIE,QAAQ,GAAG;EACX,YAAY,UAAUC,CAAV,EAAaT,WAAb,EAA0BL,OAA1B,EAAmC;IAC3Cc,CAAC,CAACF,IAAF,GAASP,WAAT;IACAS,CAAC,CAACd,OAAF,GAAYA,OAAO,IAAI,WAAWf,YAAY,CAACoB,WAAD,CAAvB,GAAuC,GAA9D;EACH,CAJU;EAKXU,MAAM,EAAE,UAAUD,CAAV,EAAaT,WAAb,EAA0B;IAC9BS,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;MACvB;MACA,OAAOS,WAAW,IAAIT,MAAtB,CAFuB,CAEO;IACjC,CAHD;EAIH,CAVU;EAWXM,MAAM,EAAE,UAAUY,CAAV,EAAaT,WAAb,EAA0B;IAC9B,IAAIW,KAAK,GAAG,EAAZ;;IAEA,IAAI,OAAOX,WAAW,CAACO,IAAnB,KAA4B,UAAhC,EAA4C;MACxCE,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;QACvB,OAAOS,WAAW,CAACO,IAAZ,CAAiBhB,MAAjB,MAA6B,IAApC;MACH,CAFD;;MAGAkB,CAAC,CAACd,OAAF,GAAY,WAAWf,YAAY,CAACoB,WAAW,CAACO,IAAb,CAAvB,GAA4C,GAAxD;MACA,OAAOE,CAAP;IACH;;IAEDE,KAAK,GAAGT,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBY,GAAzB,CAA6B,UAAUR,GAAV,EAAe;MAChD,OAAOA,GAAG,GAAG,IAAN,GAAarB,aAAa,CAACiB,WAAW,CAACI,GAAD,CAAZ,CAAjC;IACH,CAFO,CAAR;;IAIAK,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;MACvB,OAAOQ,WAAW,CAACC,WAAD,EAAcT,MAAd,CAAlB;IACH,CAFD;;IAGAkB,CAAC,CAACd,OAAF,GAAY,WAAWgB,KAAK,CAACE,IAAN,CAAW,IAAX,CAAX,GAA8B,GAA1C;IAEA,OAAOJ,CAAP;EACH,CAhCU;EAiCXK,MAAM,EAAE,UAAUL,CAAV,EAAaT,WAAb,EAA0B;IAC9BS,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;MACvB,OAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8BS,WAAW,CAACO,IAAZ,CAAiBhB,MAAjB,CAArC;IACH,CAFD;EAGH,CArCU;EAsCXwB,MAAM,EAAE,UAAUN,CAAV,EAAaT,WAAb,EAA0B;IAC9BS,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;MACvB,OAAO,OAAOA,MAAP,KAAkB,QAAlB,IAA8BA,MAAM,CAACP,OAAP,CAAegB,WAAf,MAAgC,CAAC,CAAtE;IACH,CAFD;;IAGAS,CAAC,CAACd,OAAF,GAAY,aAAaK,WAAb,GAA2B,KAAvC;EACH;AA3CU,CAAf;;AA8CA,SAAStB,KAAT,CAAesB,WAAf,EAA4BL,OAA5B,EAAqC;EACjC,IAAIc,CAAC,GAAGP,MAAM,CAACc,MAAP,CAAcvB,OAAd,CAAR;EACA,IAAIJ,IAAI,GAAGP,MAAM,CAACkB,WAAD,CAAjB;;EAEA,IAAIX,IAAI,IAAImB,QAAZ,EAAsB;IAClBA,QAAQ,CAACnB,IAAD,CAAR,CAAeoB,CAAf,EAAkBT,WAAlB,EAA+BL,OAA/B;EACH,CAFD,MAEO;IACHc,CAAC,CAACF,IAAF,GAAS,UAAUhB,MAAV,EAAkB;MACvB,OAAOhB,SAAS,CAACyB,WAAD,EAAcT,MAAd,CAAhB;IACH,CAFD;EAGH;;EAED,IAAI,CAACkB,CAAC,CAACd,OAAP,EAAgB;IACZc,CAAC,CAACd,OAAF,GAAY,WAAWZ,aAAa,CAACiB,WAAD,CAAxB,GAAwC,GAApD;EACH;;EAED,OAAOS,CAAP;AACH;;AAEDhB,OAAO,CAACwB,EAAR,GAAa,UAAUC,EAAV,EAAc;EACvB,IAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;IACnB,MAAM,IAAI5B,SAAJ,CAAc,kBAAd,CAAN;EACH,CAFD,MAEO,IAAI,CAACI,SAAS,CAACsB,EAAD,CAAd,EAAoB;IACvBA,EAAE,GAAGxC,KAAK,CAACwC,EAAD,CAAV;EACH;;EACD,IAAIG,EAAE,GAAG,IAAT;EACA,IAAIJ,EAAE,GAAGf,MAAM,CAACc,MAAP,CAAcvB,OAAd,CAAT;;EACAwB,EAAE,CAACV,IAAH,GAAU,UAAUhB,MAAV,EAAkB;IACxB,OAAO8B,EAAE,CAACd,IAAH,CAAQhB,MAAR,KAAmB2B,EAAE,CAACX,IAAH,CAAQhB,MAAR,CAA1B;EACH,CAFD;;EAGA0B,EAAE,CAACtB,OAAH,GAAa0B,EAAE,CAAC1B,OAAH,GAAa,MAAb,GAAsBuB,EAAE,CAACvB,OAAzB,GAAmC,GAAhD;EACA,OAAOsB,EAAP;AACH,CAbD;;AAeAxB,OAAO,CAAC6B,GAAR,GAAc,UAAUJ,EAAV,EAAc;EACxB,IAAI,CAACC,SAAS,CAACC,MAAf,EAAuB;IACnB,MAAM,IAAI5B,SAAJ,CAAc,kBAAd,CAAN;EACH,CAFD,MAEO,IAAI,CAACI,SAAS,CAACsB,EAAD,CAAd,EAAoB;IACvBA,EAAE,GAAGxC,KAAK,CAACwC,EAAD,CAAV;EACH;;EACD,IAAIG,EAAE,GAAG,IAAT;EACA,IAAIC,GAAG,GAAGpB,MAAM,CAACc,MAAP,CAAcvB,OAAd,CAAV;;EACA6B,GAAG,CAACf,IAAJ,GAAW,UAAUhB,MAAV,EAAkB;IACzB,OAAO8B,EAAE,CAACd,IAAH,CAAQhB,MAAR,KAAmB2B,EAAE,CAACX,IAAH,CAAQhB,MAAR,CAA1B;EACH,CAFD;;EAGA+B,GAAG,CAAC3B,OAAJ,GAAc0B,EAAE,CAAC1B,OAAH,GAAa,OAAb,GAAuBuB,EAAE,CAACvB,OAA1B,GAAoC,GAAlD;EACA,OAAO2B,GAAP;AACH,CAbD;;AAeA5C,KAAK,CAACkB,SAAN,GAAkBA,SAAlB;AAEAlB,KAAK,CAAC6C,GAAN,GAAY7C,KAAK,CAAC,YAAY;EAC1B,OAAO,IAAP;AACH,CAFgB,EAEd,KAFc,CAAjB;AAIAA,KAAK,CAAC8C,OAAN,GAAgB9C,KAAK,CAAC,UAAUa,MAAV,EAAkB;EACpC,OAAOA,MAAM,KAAK,IAAX,IAAmBA,MAAM,KAAKU,SAArC;AACH,CAFoB,EAElB,SAFkB,CAArB;AAIAvB,KAAK,CAAC+C,MAAN,GAAe/C,KAAK,CAAC,UAAUa,MAAV,EAAkB;EACnC,OAAO,CAAC,CAACA,MAAT;AACH,CAFmB,EAEjB,QAFiB,CAApB;AAIAb,KAAK,CAACgD,KAAN,GAAchD,KAAK,CAAC,UAAUa,MAAV,EAAkB;EAClC,OAAO,CAACA,MAAR;AACH,CAFkB,EAEhB,OAFgB,CAAnB;;AAIAb,KAAK,CAACiD,IAAN,GAAa,UAAU3B,WAAV,EAAuB;EAChC,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOS,WAAW,KAAKT,MAAvB;EACH,CAFW,EAET,UAAUR,aAAa,CAACiB,WAAD,CAAvB,GAAuC,GAF9B,CAAZ;AAGH,CAJD;;AAMAtB,KAAK,CAACI,MAAN,GAAe,UAAUO,IAAV,EAAgB;EAC3BF,UAAU,CAACE,IAAD,EAAO,QAAP,EAAiB,MAAjB,CAAV;EACA,OAAOX,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOT,MAAM,CAACS,MAAD,CAAN,KAAmBF,IAA1B;EACH,CAFW,EAET,cAAcA,IAAd,GAAqB,KAFZ,CAAZ;AAGH,CALD;;AAOAX,KAAK,CAACkD,UAAN,GAAmB,UAAUvC,IAAV,EAAgB;EAC/BF,UAAU,CAACE,IAAD,EAAO,UAAP,EAAmB,MAAnB,CAAV;EACA,OAAOX,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOA,MAAM,YAAYF,IAAzB;EACH,CAFW,EAET,gBAAgBT,YAAY,CAACS,IAAD,CAA5B,GAAqC,GAF5B,CAAZ;AAGH,CALD;;AAOA,SAASwC,qBAAT,CAA+BC,YAA/B,EAA6CC,aAA7C,EAA4D;EACxD,OAAO,UAAUC,QAAV,EAAoB5C,KAApB,EAA2B;IAC9BD,UAAU,CAAC6C,QAAD,EAAW,QAAX,EAAqB,UAArB,CAAV;IACA,IAAIC,YAAY,GAAGd,SAAS,CAACC,MAAV,KAAqB,CAAxC;IACA,IAAIzB,OAAO,GAAGoC,aAAa,GAAG,KAAhB,GAAwBC,QAAxB,GAAmC,IAAjD;;IACA,IAAI,CAACC,YAAL,EAAmB;MACftC,OAAO,IAAI,OAAOZ,aAAa,CAACK,KAAD,CAA/B;IACH;;IACDO,OAAO,IAAI,GAAX;IACA,OAAOjB,KAAK,CAAC,UAAUa,MAAV,EAAkB;MAC3B,IAAIA,MAAM,KAAKU,SAAX,IAAwBV,MAAM,KAAK,IAAnC,IACI,CAACuC,YAAY,CAACvC,MAAD,EAASyC,QAAT,CADrB,EACyC;QACrC,OAAO,KAAP;MACH;;MACD,OAAOC,YAAY,IAAI1D,SAAS,CAACa,KAAD,EAAQG,MAAM,CAACyC,QAAD,CAAd,CAAhC;IACH,CANW,EAMTrC,OANS,CAAZ;EAOH,CAfD;AAgBH;;AAEDjB,KAAK,CAACwD,GAAN,GAAYL,qBAAqB,CAAC,UAAUtC,MAAV,EAAkByC,QAAlB,EAA4B;EAC1D,IAAI,OAAOzC,MAAP,KAAkB,QAAtB,EAAgC;IAC5B,OAAOyC,QAAQ,IAAIzC,MAAnB;EACH;;EACD,OAAOA,MAAM,CAACyC,QAAD,CAAN,KAAqB/B,SAA5B;AACH,CALgC,EAK9B,KAL8B,CAAjC;AAOAvB,KAAK,CAACyD,MAAN,GAAeN,qBAAqB,CAAC,UAAUtC,MAAV,EAAkByC,QAAlB,EAA4B;EAC7D,OAAOzC,MAAM,CAAC6C,cAAP,CAAsBJ,QAAtB,CAAP;AACH,CAFmC,EAEjC,QAFiC,CAApC;AAIAtD,KAAK,CAACiC,KAAN,GAAcjC,KAAK,CAACI,MAAN,CAAa,OAAb,CAAd;;AAEAJ,KAAK,CAACiC,KAAN,CAAY0B,UAAZ,GAAyB,UAAUrC,WAAV,EAAuB;EAC5C,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B;IACA,IAAI+C,UAAU,GAAG/C,MAAM,CAAC6B,MAAP,KAAkBpB,WAAW,CAACoB,MAA/C;IACA,OAAOtC,MAAM,CAACS,MAAD,CAAN,KAAmB,OAAnB,IAA8B+C,UAA9B,IAA4C3D,KAAK,CAACY,MAAD,EAAS,UAAUgD,OAAV,EAAmBC,KAAnB,EAA0B;MACvF,OAAOxC,WAAW,CAACwC,KAAD,CAAX,KAAuBD,OAA9B;IACH,CAFuD,CAAxD;EAGH,CANW,EAMT,iBAAiB1D,gBAAgB,CAACmB,WAAD,CAAjC,GAAiD,IANxC,CAAZ;AAOH,CARD;;AAUAtB,KAAK,CAACiC,KAAN,CAAY8B,UAAZ,GAAyB,UAAUzC,WAAV,EAAuB;EAC5C,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOT,MAAM,CAACS,MAAD,CAAN,KAAmB,OAAnB,IAA8BZ,KAAK,CAACqB,WAAD,EAAc,UAAU0C,eAAV,EAA2BF,KAA3B,EAAkC;MACtF,OAAOjD,MAAM,CAACiD,KAAD,CAAN,KAAkBE,eAAzB;IACH,CAFyC,CAA1C;EAGH,CAJW,EAIT,iBAAiB7D,gBAAgB,CAACmB,WAAD,CAAjC,GAAiD,IAJxC,CAAZ;AAKH,CAND;;AAQAtB,KAAK,CAACiC,KAAN,CAAYgC,QAAZ,GAAuB,UAAU3C,WAAV,EAAuB;EAC1C,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B;IACA,IAAIqD,MAAM,GAAGrD,MAAM,CAAC6B,MAAP,GAAgBpB,WAAW,CAACoB,MAAzC;IAEA,OAAOtC,MAAM,CAACS,MAAD,CAAN,KAAmB,OAAnB,IAA8BZ,KAAK,CAACqB,WAAD,EAAc,UAAU0C,eAAV,EAA2BF,KAA3B,EAAkC;MACtF,OAAOjD,MAAM,CAACqD,MAAM,GAAGJ,KAAV,CAAN,KAA2BE,eAAlC;IACH,CAFyC,CAA1C;EAGH,CAPW,EAOT,eAAe7D,gBAAgB,CAACmB,WAAD,CAA/B,GAA+C,IAPtC,CAAZ;AAQH,CATD;;AAWAtB,KAAK,CAACiC,KAAN,CAAYkC,QAAZ,GAAuB,UAAU7C,WAAV,EAAuB;EAC1C,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOT,MAAM,CAACS,MAAD,CAAN,KAAmB,OAAnB,IAA8BZ,KAAK,CAACqB,WAAD,EAAc,UAAU0C,eAAV,EAA2B;MAC/E,OAAO1D,OAAO,CAAC8D,IAAR,CAAavD,MAAb,EAAqBmD,eAArB,MAA0C,CAAC,CAAlD;IACH,CAFyC,CAA1C;EAGH,CAJW,EAIT,eAAe7D,gBAAgB,CAACmB,WAAD,CAA/B,GAA+C,IAJtC,CAAZ;AAKH,CAND;;AAQAtB,KAAK,CAACkC,GAAN,GAAYlC,KAAK,CAACI,MAAN,CAAa,KAAb,CAAZ;;AAEAJ,KAAK,CAACkC,GAAN,CAAUyB,UAAV,GAAuB,SAASU,aAAT,CAAuB/C,WAAvB,EAAoC;EACvD,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B;IACA,IAAI+C,UAAU,GAAG/C,MAAM,CAACyD,IAAP,KAAgBhD,WAAW,CAACgD,IAA7C;IACA,OAAOlE,MAAM,CAACS,MAAD,CAAN,KAAmB,KAAnB,IAA4B+C,UAA5B,IAA0C3D,KAAK,CAACY,MAAD,EAAS,UAAUgD,OAAV,EAAmBnC,GAAnB,EAAwB;MACnF,OAAOJ,WAAW,CAACkC,GAAZ,CAAgB9B,GAAhB,KAAwBJ,WAAW,CAACiD,GAAZ,CAAgB7C,GAAhB,MAAyBmC,OAAxD;IACH,CAFqD,CAAtD;EAGH,CANW,EAMT,oBAAoB1D,gBAAgB,CAACmB,WAAD,CAApC,GAAoD,IAN3C,CAAZ;AAOH,CARD;;AAUAtB,KAAK,CAACkC,GAAN,CAAUiC,QAAV,GAAqB,SAASK,WAAT,CAAqBlD,WAArB,EAAkC;EACnD,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOT,MAAM,CAACS,MAAD,CAAN,KAAmB,KAAnB,IAA4BZ,KAAK,CAACqB,WAAD,EAAc,UAAUuC,OAAV,EAAmBnC,GAAnB,EAAwB;MAC1E,OAAOb,MAAM,CAAC2C,GAAP,CAAW9B,GAAX,KAAmBb,MAAM,CAAC0D,GAAP,CAAW7C,GAAX,MAAoBmC,OAA9C;IACH,CAFuC,CAAxC;EAGH,CAJW,EAIT,kBAAkB1D,gBAAgB,CAACmB,WAAD,CAAlC,GAAkD,IAJzC,CAAZ;AAKH,CAND;;AAQAtB,KAAK,CAACyE,GAAN,GAAYzE,KAAK,CAACI,MAAN,CAAa,KAAb,CAAZ;;AAEAJ,KAAK,CAACyE,GAAN,CAAUd,UAAV,GAAuB,SAASe,aAAT,CAAuBpD,WAAvB,EAAoC;EACvD,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B;IACA,IAAI+C,UAAU,GAAG/C,MAAM,CAACyD,IAAP,KAAgBhD,WAAW,CAACgD,IAA7C;IACA,OAAOlE,MAAM,CAACS,MAAD,CAAN,KAAmB,KAAnB,IAA4B+C,UAA5B,IAA0C3D,KAAK,CAACY,MAAD,EAAS,UAAUgD,OAAV,EAAmB;MAC9E,OAAOvC,WAAW,CAACkC,GAAZ,CAAgBK,OAAhB,CAAP;IACH,CAFqD,CAAtD;EAGH,CANW,EAMT,oBAAoB1D,gBAAgB,CAACmB,WAAD,CAApC,GAAoD,IAN3C,CAAZ;AAOH,CARD;;AAUAtB,KAAK,CAACyE,GAAN,CAAUN,QAAV,GAAqB,SAASQ,WAAT,CAAqBrD,WAArB,EAAkC;EACnD,OAAOtB,KAAK,CAAC,UAAUa,MAAV,EAAkB;IAC3B,OAAOT,MAAM,CAACS,MAAD,CAAN,KAAmB,KAAnB,IAA4BZ,KAAK,CAACqB,WAAD,EAAc,UAAUuC,OAAV,EAAmB;MACrE,OAAOhD,MAAM,CAAC2C,GAAP,CAAWK,OAAX,CAAP;IACH,CAFuC,CAAxC;EAGH,CAJW,EAIT,kBAAkB1D,gBAAgB,CAACmB,WAAD,CAAlC,GAAkD,IAJzC,CAAZ;AAKH,CAND;;AAQAtB,KAAK,CAAC4E,IAAN,GAAa5E,KAAK,CAACI,MAAN,CAAa,SAAb,CAAb;AACAJ,KAAK,CAACgC,MAAN,GAAehC,KAAK,CAACI,MAAN,CAAa,QAAb,CAAf;AACAJ,KAAK,CAACqC,MAAN,GAAerC,KAAK,CAACI,MAAN,CAAa,QAAb,CAAf;AACAJ,KAAK,CAACmB,MAAN,GAAenB,KAAK,CAACI,MAAN,CAAa,QAAb,CAAf;AACAJ,KAAK,CAAC6E,IAAN,GAAa7E,KAAK,CAACI,MAAN,CAAa,UAAb,CAAb;AACAJ,KAAK,CAACoC,MAAN,GAAepC,KAAK,CAACI,MAAN,CAAa,QAAb,CAAf;AACAJ,KAAK,CAAC8E,IAAN,GAAa9E,KAAK,CAACI,MAAN,CAAa,MAAb,CAAb;AACAJ,KAAK,CAAC+E,MAAN,GAAe/E,KAAK,CAACI,MAAN,CAAa,QAAb,CAAf;AAEA4E,MAAM,CAACC,OAAP,GAAiBjF,KAAjB"},"metadata":{},"sourceType":"script"}